// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/stock.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace StockService {
  /// <summary>
  /// The greeting service definition.
  /// </summary>
  public static partial class Stock
  {
    static readonly string __ServiceName = "stock.Stock";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::StockService.CreateStockRequest> __Marshaller_stock_CreateStockRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StockService.CreateStockRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::StockService.CreateStockReply> __Marshaller_stock_CreateStockReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StockService.CreateStockReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::StockService.GetNumOfStockRequest> __Marshaller_stock_GetNumOfStockRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StockService.GetNumOfStockRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::StockService.GetNumOfStockReply> __Marshaller_stock_GetNumOfStockReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StockService.GetNumOfStockReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::StockService.GetStockByProdIdRequest> __Marshaller_stock_GetStockByProdIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StockService.GetStockByProdIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::StockService.GetStockByProdIdReply> __Marshaller_stock_GetStockByProdIdReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StockService.GetStockByProdIdReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::StockService.GetStockPaginateRequest> __Marshaller_stock_GetStockPaginateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StockService.GetStockPaginateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::StockService.GetStockPaginateReply> __Marshaller_stock_GetStockPaginateReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StockService.GetStockPaginateReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::StockService.UpdateStockRequest> __Marshaller_stock_UpdateStockRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StockService.UpdateStockRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::StockService.UpdateStockReply> __Marshaller_stock_UpdateStockReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StockService.UpdateStockReply.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::StockService.DeleteStockRequest> __Marshaller_stock_DeleteStockRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StockService.DeleteStockRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::StockService.DeleteStockReply> __Marshaller_stock_DeleteStockReply = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::StockService.DeleteStockReply.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::StockService.CreateStockRequest, global::StockService.CreateStockReply> __Method_AddStock = new grpc::Method<global::StockService.CreateStockRequest, global::StockService.CreateStockReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddStock",
        __Marshaller_stock_CreateStockRequest,
        __Marshaller_stock_CreateStockReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::StockService.GetNumOfStockRequest, global::StockService.GetNumOfStockReply> __Method_GetNumOfStock = new grpc::Method<global::StockService.GetNumOfStockRequest, global::StockService.GetNumOfStockReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNumOfStock",
        __Marshaller_stock_GetNumOfStockRequest,
        __Marshaller_stock_GetNumOfStockReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::StockService.GetStockByProdIdRequest, global::StockService.GetStockByProdIdReply> __Method_GetStockById = new grpc::Method<global::StockService.GetStockByProdIdRequest, global::StockService.GetStockByProdIdReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStockById",
        __Marshaller_stock_GetStockByProdIdRequest,
        __Marshaller_stock_GetStockByProdIdReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::StockService.GetStockPaginateRequest, global::StockService.GetStockPaginateReply> __Method_GetStockPaginate = new grpc::Method<global::StockService.GetStockPaginateRequest, global::StockService.GetStockPaginateReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetStockPaginate",
        __Marshaller_stock_GetStockPaginateRequest,
        __Marshaller_stock_GetStockPaginateReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::StockService.UpdateStockRequest, global::StockService.UpdateStockReply> __Method_UpdateStock = new grpc::Method<global::StockService.UpdateStockRequest, global::StockService.UpdateStockReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateStock",
        __Marshaller_stock_UpdateStockRequest,
        __Marshaller_stock_UpdateStockReply);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::StockService.DeleteStockRequest, global::StockService.DeleteStockReply> __Method_DeleteStock = new grpc::Method<global::StockService.DeleteStockRequest, global::StockService.DeleteStockReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteStock",
        __Marshaller_stock_DeleteStockRequest,
        __Marshaller_stock_DeleteStockReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::StockService.StockReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Stock</summary>
    [grpc::BindServiceMethod(typeof(Stock), "BindService")]
    public abstract partial class StockBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::StockService.CreateStockReply> AddStock(global::StockService.CreateStockRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::StockService.GetNumOfStockReply> GetNumOfStock(global::StockService.GetNumOfStockRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::StockService.GetStockByProdIdReply> GetStockById(global::StockService.GetStockByProdIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::StockService.GetStockPaginateReply> GetStockPaginate(global::StockService.GetStockPaginateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::StockService.UpdateStockReply> UpdateStock(global::StockService.UpdateStockRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::StockService.DeleteStockReply> DeleteStock(global::StockService.DeleteStockRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(StockBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddStock, serviceImpl.AddStock)
          .AddMethod(__Method_GetNumOfStock, serviceImpl.GetNumOfStock)
          .AddMethod(__Method_GetStockById, serviceImpl.GetStockById)
          .AddMethod(__Method_GetStockPaginate, serviceImpl.GetStockPaginate)
          .AddMethod(__Method_UpdateStock, serviceImpl.UpdateStock)
          .AddMethod(__Method_DeleteStock, serviceImpl.DeleteStock).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, StockBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddStock, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::StockService.CreateStockRequest, global::StockService.CreateStockReply>(serviceImpl.AddStock));
      serviceBinder.AddMethod(__Method_GetNumOfStock, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::StockService.GetNumOfStockRequest, global::StockService.GetNumOfStockReply>(serviceImpl.GetNumOfStock));
      serviceBinder.AddMethod(__Method_GetStockById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::StockService.GetStockByProdIdRequest, global::StockService.GetStockByProdIdReply>(serviceImpl.GetStockById));
      serviceBinder.AddMethod(__Method_GetStockPaginate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::StockService.GetStockPaginateRequest, global::StockService.GetStockPaginateReply>(serviceImpl.GetStockPaginate));
      serviceBinder.AddMethod(__Method_UpdateStock, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::StockService.UpdateStockRequest, global::StockService.UpdateStockReply>(serviceImpl.UpdateStock));
      serviceBinder.AddMethod(__Method_DeleteStock, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::StockService.DeleteStockRequest, global::StockService.DeleteStockReply>(serviceImpl.DeleteStock));
    }

  }
}
#endregion
